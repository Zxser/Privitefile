<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dh.system.po.SysModuleMapper" >
  <resultMap id="BaseResultMap" type="com.dh.system.po.SysModule" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="sql_column">
  	id,name,url,parent_id
  </sql>
  <sql id="Base_Column_List" >
    id, name, sort, url, parent_id,sn,description
  </sql>
    <resultMap type="com.dh.system.vo.SysModuleQuery" id="editModule" >
  </resultMap>
  <select id="findById" resultMap="editModule" parameterType="java.lang.Long" >
    select 
    m1.*, m2.name parentName
    from sys_module m1 left join sys_module m2 on m1.parent_id = m2.id
    where m1.id = #{id,jdbcType=BIGINT}
  </select>
  
 <select id="count" resultType="java.lang.Integer" parameterType="com.dh.system.vo.SysModuleQuery" >
     <![CDATA[select count(*) from sys_module ]]>  
	    <where>
	  	</where>
	</select>
  <select id="findAll" resultMap="BaseResultMap" parameterType="com.dh.system.vo.SysModuleQuery" >
    select 
    <include refid="Base_Column_List" />
    from sys_module
  </select>
  
  <select id="top" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_module
    where parent_id is null
  </select>
  
  <select id="findByRoleId" resultMap="BaseResultMap" parameterType="Long">
    SELECT m.* from sys_role_module rm LEFT JOIN sys_module m on m.id=rm.module_id where rm.role_id=#{roleId}
  </select>
  <select id="getByRoleIds" resultMap="BaseResultMap" parameterType="Long">
	SELECT * from sys_module where id not in(SELECT rm.module_id from sys_role_module rm 
	LEFT JOIN sys_module m on m.id=rm.module_id where rm.role_id=#{roleId} )
  </select>
  
  <select id="findModuleByParendId" resultMap="BaseResultMap" parameterType="Long">
    select 
    <include refid="Base_Column_List" />
    from sys_module
    where parent_id=#{parendId}
  </select>

  <delete id="delete" parameterType="java.lang.Long" >
     delete from sys_module
	    where id in 
	    <foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
			 #{item}  
		</foreach>  
  </delete>
  
  
  <insert id="insert" parameterType="com.dh.system.po.SysModule" >
    insert into sys_module (id, name, sn,description,
      sort, url, 
      parent_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},
      #{sort,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT})
  </insert>
 
  <update id="update" parameterType="com.dh.system.po.SysModule" >
    update sys_module
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="description != description" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="sn != null" >
        sn = #{sn,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dh.system.po.SysModule" >
    update sys_module
    set 
      name = #{name,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 查询顶级 -->
  <select id="selectByFirst" resultMap="firstModule">
		SELECT
			m1.*,
			m2.id p_id,m2.name p_name
		FROM
			sys_module m1
		LEFT JOIN sys_module m2 ON m2.parent_id = m1.id
		WHERE
			m1.parent_id IS NULL
	  </select>
  <resultMap type="com.dh.system.po.SysModule" id="firstModule" extends="BaseResultMap">
		<collection property="children"  column="parent_id" javaType="arrayList" ofType="com.dh.system.po.SysModule" >
			<id column="p_id" property="id" jdbcType="BIGINT" />
		    <result column="p_name" property="name" jdbcType="VARCHAR" />
		    <result column="p_path" property="url" jdbcType="VARCHAR" />
		    <result column="p_parent_id" property="parentId" jdbcType="BIGINT" />
		</collection>
  </resultMap>

  <select id="findModuleByUserId" resultMap="firstModule">
  	SELECT mo.* FROM sys_module mo LEFT JOIN sys_role_module romo on romo.module_id=mo.id 
	LEFT JOIN sys_user_role ur on ur.role_id=romo.role_id
	where ur.user_id=#{userId} and romo.pid is null ORDER BY romo.sort
 </select>
 
  <select id="findModuleByUserIdModuleId" resultMap="firstModule">
  	SELECT * FROM sys_module mo LEFT JOIN sys_role_module romo on romo.module_id=mo.id 
	LEFT JOIN sys_user_role ur on ur.role_id=romo.role_id
	where ur.user_id=#{userId} and romo.pid=#{moduleId}  ORDER BY romo.sort
 </select>
 
  <!-- 根据用户id查询模块 
  <select id="findModuleByUserId" resultMap="firstModule">
  	SELECT
	m1.*,
	m2.id p_id,m2.name p_name,m2.url p_path,role.*,ur.*
	FROM
		sys_module m1
	 JOIN sys_module m2 ON m2.parent_id = m1.id
	LEFT JOIN sys_role_module role ON role.module_id = m2.id   LEFT JOIN sys_user_role ur on ur.role_id=role.role_id where ur.user_id=#{userId} GROUP BY m2.id
  </select>
  -->
</mapper>